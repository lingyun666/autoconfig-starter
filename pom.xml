<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.lingyun666</groupId>
    <artifactId>autoconfig-starter</artifactId>
    <!--att: 不要使用snapshot,否则不会同步至中央仓库!-->
    <version>1.1.1</version>
    <!--att: 打包形式不可为pom,这会导致只上传pom到仓库!-->
    <!--<packaging>pom</packaging>-->

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.3.9.RELEASE</version>

        </dependency>
        <!--knife4j start-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>2.0.7</version>
        </dependency>
        <!--解决knife4j缺少依赖问题-->
        <dependency>
            <groupId>org.springframework.plugin</groupId>
            <artifactId>spring-plugin-core</artifactId>
            <version>2.0.0.RELEASE</version>
        </dependency>
        <!--knife4j hhe 2023-1-5-->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
            <version>8.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.18</version>
        </dependency>
        <!--在 yml 文件中配置相关属性值将会自动给出 自写的注释提示-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
            <version>2.3.9.RELEASE</version>
        </dependency>
    </dependencies>

    <!--hhs 2023-3-22 上传jar至maven中央仓库所需配置 -->
    <!-- 1.项目基础信息 -->
    <name>autoconfig-starter</name>
    <description>自动配置的starter</description>
    <url>https://github.com/lingyun666</url>
    <!--2.licenses信息-->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    <!--3.开发者信息-->
    <developers>
        <developer>
            <id>lingkong</id>
            <name>lingkong</name>
            <email>lingkongo@163.com</email>
            <roles>
                <role>Project Manager</role>
                <role>Architect</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
    </developers>
    <!--4.scm信息-->
    <scm>
        <connection>https://github.com/lingyun666/autoconfig-starter.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:lingyun666/autoconfig-starter.git</developerConnection>
        <url>https://github.com/lingyun666/autoconfig-starter</url>
    </scm>
    <!--5.仓库地址+插件信息-->
    <profiles>
        <profile>
            <!-- 注意,此id必须与setting.xml中指定的一致 -->
            <id>ossrh</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <!--仓库地址管理-->
            <distributionManagement>
                <!-- 要发布到的snapshot仓库 -->
                <snapshotRepository>
                    <!-- 注意,此id必须与setting.xml中指定的一致 -->
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <!-- 要发布到的仓库 -->
                <repository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <!--nexus流程处理插件 实现自动（deploy、release、drop...）等-->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.7</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <!-- gpg签名认证jar包各个资源, 避免被篡改 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <!--
                                    注: 如果不主动指定gpg.exe的话，那么可能(因为和idea内部发生了未知冲突)报错
                                    Cannot run program "gpg.exe": CreateProcess error=2, 系统找不到指定的文件。
                                    注: 当然，如果你直接用的git bash之类的工具执行mvn，而不是用idea提供的maven功能
                                        的话，你也可以不指定executable。
                                 -->
                                <configuration>
                                    <executable>C:/programs/env/maven/GnuPG/bin/gpg.exe</executable>
                                    <!--
                                        指定GPG 代表公钥的密钥id
                                        注:因为我们可能拥有多个GPG密钥对，所以我们需要指定使用哪一个
                                    -->
                                    <passphrase>ED78DE064F2AA53AEFC177F9112ADEA777009081</passphrase>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!--  打包源码 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 打包javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9.1</version>
                        <configuration>
                            <!-- 忽略生成文档中的错误，如果想看下控制台中关于生成doc错误的去掉这个参数 -->
                            <additionalparam>-Xdoclint:none</additionalparam>
                            <aggregate>true</aggregate>
                            <charset>UTF-8</charset><!-- utf-8读取文件 -->
                            <encoding>UTF-8</encoding><!-- utf-8进行编码代码 -->
                            <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 -->
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>